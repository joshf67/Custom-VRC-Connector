{
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Server Connector documentation",
    "keywords": "Namespace Global Classes UdonHashLib"
  },
  "api/Global.UdonHashLib.html": {
    "href": "api/Global.UdonHashLib.html",
    "title": "Class UdonHashLib | Server Connector documentation",
    "keywords": "Class UdonHashLib Inheritance Object UdonHashLib Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UdonHashLib : UdonSharpBehaviour Methods MD5_Bytes(Byte[]) Declaration public string MD5_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String MD5_UTF8(String) Declaration public string MD5_UTF8(string text) Parameters Type Name Description String text Returns Type Description String SHA1_Bytes(Byte[]) Declaration public string SHA1_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String SHA1_UTF8(String) Declaration public string SHA1_UTF8(string text) Parameters Type Name Description String text Returns Type Description String SHA224_Bytes(Byte[]) Declaration public string SHA224_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String SHA224_UTF8(String) Declaration public string SHA224_UTF8(string text) Parameters Type Name Description String text Returns Type Description String SHA256_Bytes(Byte[]) Declaration public string SHA256_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String SHA256_UTF8(String) Declaration public string SHA256_UTF8(string text) Parameters Type Name Description String text Returns Type Description String SHA384_Bytes(Byte[]) Declaration public string SHA384_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String SHA384_UTF8(String) Declaration public string SHA384_UTF8(string text) Parameters Type Name Description String text Returns Type Description String SHA512_Bytes(Byte[]) Declaration public string SHA512_Bytes(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description String SHA512_UTF8(String) Declaration public string SHA512_UTF8(string text) Parameters Type Name Description String text Returns Type Description String"
  },
  "api/Joshf67.ServerConnector.Connector.html": {
    "href": "api/Joshf67.ServerConnector.Connector.html",
    "title": "Class Connector | Server Connector documentation",
    "keywords": "Class Connector Abstract base class to enable easy connections to for servers Inheritance Object Connector ExampleDatabaseConnector Namespace : Joshf67.ServerConnector Assembly : cs.temp.dll.dll Syntax public abstract class Connector : UdonSharpBehaviour Fields messageTypeSize Controls how many bits are used for specifying the message type Declaration protected byte messageTypeSize Field Value Type Description Byte packingMessageBitSize Controls how many bits are packed into each message Declaration protected byte packingMessageBitSize Field Value Type Description Byte Methods AddMessagesToBuffer(DataList) Adds multiple messages to the buffer to be sent (usually batched with a single response type on the first message) Declaration public void AddMessagesToBuffer(DataList messages) Parameters Type Name Description DataList messages The messages to add AddMessageToBuffer(Int32) Adds a single message to the buffer to be sent Declaration public void AddMessageToBuffer(int message) Parameters Type Name Description Int32 message The message to add HandleMessage(String) Required function for any children to implement to recieve messages Declaration public abstract void HandleMessage(string response) Parameters Type Name Description String response The server XML response ManagerStart() Virtual function for any children to add onto the Start function Declaration protected virtual void ManagerStart() ManagerUpdate() Virtual function for any children to add onto the Update function Declaration protected virtual void ManagerUpdate() Start() Setup all the required downloader variables when initiated Declaration public void Start()"
  },
  "api/Joshf67.ServerConnector.ConnectorMessageType.html": {
    "href": "api/Joshf67.ServerConnector.ConnectorMessageType.html",
    "title": "Enum ConnectorMessageType | Server Connector documentation",
    "keywords": "Enum ConnectorMessageType Used so the server can understand what is supposed to happen for this response Namespace : Joshf67.ServerConnector Assembly : cs.temp.dll.dll Syntax public enum ConnectorMessageType Fields Name Description AccountCreation Any messages relating to account creation AcknowledgeMessage A message reserved for acknowledging that the user still exists GeneralMessage Any general messages Invalid The default value, will fail to send Login Any messages relating to logging in MessageFinished A message reserved for any variable length data that can't be calculated ModifyItem Any item related messages"
  },
  "api/Joshf67.ServerConnector.Development.DevelopmentManager.html": {
    "href": "api/Joshf67.ServerConnector.Development.DevelopmentManager.html",
    "title": "Class DevelopmentManager | Server Connector documentation",
    "keywords": "Class DevelopmentManager Used to control the development modes of different classes all in one spot Inheritance Object DevelopmentManager Namespace : Joshf67.ServerConnector.Development Assembly : cs.temp.dll.dll Syntax public static class DevelopmentManager Fields ByteConverterMode Stores the current development mode for the ByteConverter Declaration public const DevelopmentMode ByteConverterMode = DevelopmentMode.None Field Value Type Description DevelopmentMode ConnectorMode Stores the current development mode for the Connector Declaration public const DevelopmentMode ConnectorMode = DevelopmentMode.None Field Value Type Description DevelopmentMode ImageListenerMode Stores the current development mode for the ImageListener Declaration public const DevelopmentMode ImageListenerMode = DevelopmentMode.None Field Value Type Description DevelopmentMode MessagePackerMode Stores the current development mode for the MessagePacker Declaration public const DevelopmentMode MessagePackerMode = DevelopmentMode.None Field Value Type Description DevelopmentMode SchemaMode Stores the current development mode for the Schema Declaration public const DevelopmentMode SchemaMode = DevelopmentMode.None Field Value Type Description DevelopmentMode ServerResponseMode Stores the current development mode for the ServerResponse Declaration public const DevelopmentMode ServerResponseMode = DevelopmentMode.None Field Value Type Description DevelopmentMode StringListenerMode Stores the current development mode for the StringListener Declaration public const DevelopmentMode StringListenerMode = DevelopmentMode.None Field Value Type Description DevelopmentMode Methods IsByteConverterEnabled(DevelopmentMode) Tests if the development mode for Converter is enabled Declaration public static bool IsByteConverterEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsConnectorEnabled(DevelopmentMode) Tests if the development mode for Connector is enabled Declaration public static bool IsConnectorEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsImageListenerEnabled(DevelopmentMode) Tests if the development mode for ImageListener is enabled Declaration public static bool IsImageListenerEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsMessagePackerEnabled(DevelopmentMode) Tests if the development mode for MessagePacker is enabled Declaration public static bool IsMessagePackerEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsSchemaEnabled(DevelopmentMode) Tests if the development mode for Schema is enabled Declaration public static bool IsSchemaEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsServerResponseEnabled(DevelopmentMode) Tests if the development mode for ServerResponse is enabled Declaration public static bool IsServerResponseEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected IsStringListenerEnabled(DevelopmentMode) Tests if the development mode for StringListener is enabled Declaration public static bool IsStringListenerEnabled(DevelopmentMode mode) Parameters Type Name Description DevelopmentMode mode The mode to test for Returns Type Description Boolean If the current mode is the same, or all is selected"
  },
  "api/Joshf67.ServerConnector.Development.DevelopmentMode.html": {
    "href": "api/Joshf67.ServerConnector.Development.DevelopmentMode.html",
    "title": "Enum DevelopmentMode | Server Connector documentation",
    "keywords": "Enum DevelopmentMode Used to control the depth of debugging Namespace : Joshf67.ServerConnector.Development Assembly : cs.temp.dll.dll Syntax public enum DevelopmentMode Fields Name Description Advanced Indicates advanced development mode is enabled All Indicates all development modes are enabled Basic Indicates basic development mode is enabled None Indicates no development mode is enabled Warning Indicates that error development modes are enabled"
  },
  "api/Joshf67.ServerConnector.Development.html": {
    "href": "api/Joshf67.ServerConnector.Development.html",
    "title": "Namespace Joshf67.ServerConnector.Development | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Development Classes DevelopmentManager Used to control the development modes of different classes all in one spot Enums DevelopmentMode Used to control the depth of debugging"
  },
  "api/Joshf67.ServerConnector.Development.Tests.html": {
    "href": "api/Joshf67.ServerConnector.Development.Tests.html",
    "title": "Namespace Joshf67.ServerConnector.Development.Tests | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Development.Tests Classes ServerConnectorTestSuit A set of test functions to ensure underlying code is not broken"
  },
  "api/Joshf67.ServerConnector.Development.Tests.ServerConnectorTestSuit.html": {
    "href": "api/Joshf67.ServerConnector.Development.Tests.ServerConnectorTestSuit.html",
    "title": "Class ServerConnectorTestSuit | Server Connector documentation",
    "keywords": "Class ServerConnectorTestSuit A set of test functions to ensure underlying code is not broken Inheritance Object ServerConnectorTestSuit Namespace : Joshf67.ServerConnector.Development.Tests Assembly : cs.temp.dll.dll Syntax public static class ServerConnectorTestSuit Methods RunTests() Runs all of the tests Declaration public static bool RunTests() Returns Type Description Boolean Returns if any of the test failed"
  },
  "api/Joshf67.ServerConnector.Downloader.ConnectorUrlTool.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.ConnectorUrlTool.html",
    "title": "Class ConnectorUrlTool | Server Connector documentation",
    "keywords": "Class ConnectorUrlTool Used to store all of the URLs to connect to a server Inheritance Object ConnectorUrlTool Namespace : Joshf67.ServerConnector.Downloader Assembly : cs.temp.dll.dll Syntax public class ConnectorUrlTool : UdonSharpBehaviour Fields urls Stores any of the URLs on this object Declaration public VRCUrl[] urls Field Value Type Description VRCUrl [] Methods ConvertMessageToVRCUrl(Int32) Convert an input into the correct URL object Declaration public VRCUrl ConvertMessageToVRCUrl(int input) Parameters Type Name Description Int32 input The URL/message to send Returns Type Description VRCUrl A VRC URL with the message encoded"
  },
  "api/Joshf67.ServerConnector.Downloader.ConnectorUrlToolManager.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.ConnectorUrlToolManager.html",
    "title": "Class ConnectorUrlToolManager | Server Connector documentation",
    "keywords": "Class ConnectorUrlToolManager Used to store all of the sub URL containers to enable better VRC world build speed Inheritance Object ConnectorUrlToolManager Namespace : Joshf67.ServerConnector.Downloader Assembly : cs.temp.dll.dll Syntax public class ConnectorUrlToolManager : UdonSharpBehaviour Fields urlCollections Contains every URL container assosiated with this manager Declaration public ConnectorUrlTool[] urlCollections Field Value Type Description ConnectorUrlTool [] urlCount The total URLs currently stored/generated Declaration public int urlCount Field Value Type Description Int32 urlPrefix The starting URL prefix for messages Declaration public string urlPrefix Field Value Type Description String Methods ConvertMessageToVRCUrl(Int32) Converts an int into the correct URL container index and requests the URL from it Declaration public VRCUrl ConvertMessageToVRCUrl(int input) Parameters Type Name Description Int32 input The VRCUrl index to look for Returns Type Description VRCUrl A VRCUrl with the input message"
  },
  "api/Joshf67.ServerConnector.Downloader.DownloaderMessageStatus.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.DownloaderMessageStatus.html",
    "title": "Enum DownloaderMessageStatus | Server Connector documentation",
    "keywords": "Enum DownloaderMessageStatus Used to determine what response was recieved from Namespace : Joshf67.ServerConnector.Downloader Assembly : cs.temp.dll.dll Syntax public enum DownloaderMessageStatus Fields Name Description Awaiting_Request The downloader is awaiting a response from the server Failed_To_Send The downloader failed to connect to the server Message_Sent The downloader successfully sent a message Request_Error The server responded with an error Server_Error The downloader failed to connect to the server Type_Fail The server responded with an invalid type response Unexpected_Request User_Not_Logged_In The server responded with a user not logged in response"
  },
  "api/Joshf67.ServerConnector.Downloader.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.html",
    "title": "Namespace Joshf67.ServerConnector.Downloader | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Downloader Classes ConnectorUrlTool Used to store all of the URLs to connect to a server ConnectorUrlToolManager Used to store all of the sub URL containers to enable better VRC world build speed ImageDownloaderListener This class was generated to solve an error with the Image Downloader where it can read erros from different threads The solution was to extract the onsuccess/onerror to another script and report back to the main script This is no longer needed however does split up the code for downloaders and connectors StringDownloaderListener This class was generated because of an issue with the Image Downloader where it can read erros from different threads, The solution was to extract the onsuccess/onerror to another script and report back to the main script. This is no longer needed however does split up the code for downloaders and connectors Enums DownloaderMessageStatus Used to determine what response was recieved from"
  },
  "api/Joshf67.ServerConnector.Downloader.ImageDownloaderListener.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.ImageDownloaderListener.html",
    "title": "Class ImageDownloaderListener | Server Connector documentation",
    "keywords": "Class ImageDownloaderListener This class was generated to solve an error with the Image Downloader where it can read erros from different threads The solution was to extract the onsuccess/onerror to another script and report back to the main script This is no longer needed however does split up the code for downloaders and connectors Inheritance Object ImageDownloaderListener Namespace : Joshf67.ServerConnector.Downloader Assembly : cs.temp.dll.dll Syntax public class ImageDownloaderListener : UdonSharpBehaviour Fields DownloaderStatus Stores if a message has recieved a response from a server Declaration public DownloaderMessageStatus DownloaderStatus Field Value Type Description DownloaderMessageStatus Methods OnImageLoadError(IVRCImageDownload) Image downloader is used purely to decrease response time, no result handling is needed Declaration public override void OnImageLoadError(IVRCImageDownload result) Parameters Type Name Description IVRCImageDownload result The response from a server OnImageLoadSuccess(IVRCImageDownload) Image downloader is used purely to decrease response time, no result handling is needed Declaration public override void OnImageLoadSuccess(IVRCImageDownload result) Parameters Type Name Description IVRCImageDownload result The response from a server"
  },
  "api/Joshf67.ServerConnector.Downloader.StringDownloaderListener.html": {
    "href": "api/Joshf67.ServerConnector.Downloader.StringDownloaderListener.html",
    "title": "Class StringDownloaderListener | Server Connector documentation",
    "keywords": "Class StringDownloaderListener This class was generated because of an issue with the Image Downloader where it can read erros from different threads, The solution was to extract the onsuccess/onerror to another script and report back to the main script. This is no longer needed however does split up the code for downloaders and connectors Inheritance Object StringDownloaderListener Namespace : Joshf67.ServerConnector.Downloader Assembly : cs.temp.dll.dll Syntax public class StringDownloaderListener : UdonSharpBehaviour Fields DownloaderStatus Stores if a message has recieved a response from a server Declaration public DownloaderMessageStatus DownloaderStatus Field Value Type Description DownloaderMessageStatus Properties RequestResult Public getter for the last recieved response Declaration public IVRCStringDownload RequestResult { get; } Property Value Type Description IVRCStringDownload Methods OnStringLoadError(IVRCStringDownload) Handle String Downloader error message Declaration public override void OnStringLoadError(IVRCStringDownload result) Parameters Type Name Description IVRCStringDownload result The response from the server OnStringLoadSuccess(IVRCStringDownload) Handle String Downloader successful message Declaration public override void OnStringLoadSuccess(IVRCStringDownload result) Parameters Type Name Description IVRCStringDownload result The response from the server"
  },
  "api/Joshf67.ServerConnector.Editors.ConnectorUrlToolEditor.html": {
    "href": "api/Joshf67.ServerConnector.Editors.ConnectorUrlToolEditor.html",
    "title": "Class ConnectorUrlToolEditor | Server Connector documentation",
    "keywords": "Class ConnectorUrlToolEditor Displays editor UI to help with creating the server connection URLs Inheritance Object ConnectorUrlToolEditor Namespace : Joshf67.ServerConnector.Editors Assembly : cs.temp.dll.dll Syntax public class ConnectorUrlToolEditor : Editor Methods OnInspectorGUI() Render the URL count for this URLTool Declaration public override void OnInspectorGUI()"
  },
  "api/Joshf67.ServerConnector.Editors.ConnectorUrlToolManagerEditor.html": {
    "href": "api/Joshf67.ServerConnector.Editors.ConnectorUrlToolManagerEditor.html",
    "title": "Class ConnectorUrlToolManagerEditor | Server Connector documentation",
    "keywords": "Class ConnectorUrlToolManagerEditor Displays editor UI to help with creating the server connection URLs Inheritance Object ConnectorUrlToolManagerEditor Namespace : Joshf67.ServerConnector.Editors Assembly : cs.temp.dll.dll Syntax public class ConnectorUrlToolManagerEditor : Editor Methods OnInspectorGUI() Render the main inputs and buttons to setup the URLTool Declaration public override void OnInspectorGUI()"
  },
  "api/Joshf67.ServerConnector.Editors.GenerateConnectorUrlsTool.html": {
    "href": "api/Joshf67.ServerConnector.Editors.GenerateConnectorUrlsTool.html",
    "title": "Class GenerateConnectorUrlsTool | Server Connector documentation",
    "keywords": "Class GenerateConnectorUrlsTool Displays editor UI to help with creating the server connection URLs Inheritance Object GenerateConnectorUrlsTool Namespace : Joshf67.ServerConnector.Editors Assembly : cs.temp.dll.dll Syntax public class GenerateConnectorUrlsTool : EditorWindow Methods GenerateURLs(GameObject, Int32, String) Displays editor UI to help with creating the server connection URLs Declaration public static void GenerateURLs(GameObject urlObject, int urlsToGenerate, string startingURL) Parameters Type Name Description GameObject urlObject The object to add the URL children to Int32 urlsToGenerate The amount of URLs to generate String startingURL The initial URL parameter to be prepended to the URL HideWindow() Close the editor window Declaration public static void HideWindow() OnGUI() Displays editor UI to help with creating the server connection URLs Declaration public void OnGUI() ShowWindow() Open the editor window Declaration public static void ShowWindow()"
  },
  "api/Joshf67.ServerConnector.Editors.html": {
    "href": "api/Joshf67.ServerConnector.Editors.html",
    "title": "Namespace Joshf67.ServerConnector.Editors | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Editors Classes ConnectorUrlToolEditor Displays editor UI to help with creating the server connection URLs ConnectorUrlToolManagerEditor Displays editor UI to help with creating the server connection URLs GenerateConnectorUrlsTool Displays editor UI to help with creating the server connection URLs"
  },
  "api/Joshf67.ServerConnector.Example.ExampleDatabaseConnector.html": {
    "href": "api/Joshf67.ServerConnector.Example.ExampleDatabaseConnector.html",
    "title": "Class ExampleDatabaseConnector | Server Connector documentation",
    "keywords": "Class ExampleDatabaseConnector Example connector to show how to connect to a databse and read/update values Inheritance Object Connector ExampleDatabaseConnector Inherited Members Connector.packingMessageBitSize Connector.messageTypeSize Connector.Start() Connector.ManagerStart() Connector.ManagerUpdate() Connector.AddMessageToBuffer(Int32) Connector.AddMessagesToBuffer(DataList) Namespace : Joshf67.ServerConnector.Example Assembly : cs.temp.dll.dll Syntax public class ExampleDatabaseConnector : Connector Fields AddItemField Declaration public InputField AddItemField Field Value Type Description InputField ExampleResponseParser Declaration public ExampleServerResponse ExampleResponseParser Field Value Type Description ExampleServerResponse hasher Declaration protected UdonHashLib hasher Field Value Type Description UdonHashLib itemField Declaration public Text itemField Field Value Type Description Text passwordField Declaration public InputField passwordField Field Value Type Description InputField RemoveItemField Declaration public InputField RemoveItemField Field Value Type Description InputField responseField Declaration public Text responseField Field Value Type Description Text usernameField Declaration public InputField usernameField Field Value Type Description InputField Methods AddItem() Queue up an add item message to the server and attempt to add it Declaration public void AddItem() ConvertSHA256ToMessage(String) Convert a SHA256 hash into a shorter 9 character hash to decrease login message time, This decreases the security and increase the chance of collision but due to 2.5s rate limiting this is required to make it reasonable Declaration public string ConvertSHA256ToMessage(string hash) Parameters Type Name Description String hash The string to hash Returns Type Description String A 9 character string message of the hashed value ConvertTextToHash(String) Converts a text to SHA512 using UdonHashLib Declaration public string ConvertTextToHash(string text) Parameters Type Name Description String text The text to convert Returns Type Description String A SHA512 hash of the text CreateAccount() Queue up a create account message to the server and attempt to create an account Declaration public void CreateAccount() HandleMessage(String) Accept any responses from the server and handle them Declaration public override void HandleMessage(string response) Parameters Type Name Description String response The response from the server Overrides Connector.HandleMessage(String) Login() Queue up login messages to send to the server and attempt to log in Declaration public void Login() RemoveItem() Queue up a remove item message to the server and attempt to remove it Declaration public void RemoveItem()"
  },
  "api/Joshf67.ServerConnector.Example.ExampleServerResponse.html": {
    "href": "api/Joshf67.ServerConnector.Example.ExampleServerResponse.html",
    "title": "Class ExampleServerResponse | Server Connector documentation",
    "keywords": "Class ExampleServerResponse Example response to show how to handle server responses Inheritance Object ExampleServerResponse Namespace : Joshf67.ServerConnector.Example Assembly : cs.temp.dll.dll Syntax public class ExampleServerResponse : ServerResponse Methods HandleResponse(DataDictionary, out DataToken) Handles the parsed message Declaration protected override bool HandleResponse(DataDictionary response, out DataToken HandleResult) Parameters Type Name Description DataDictionary response The JSON DataDictionary to be handled DataToken HandleResult The result of the ServerRespons handler Returns Type Description Boolean Boolean if the response was parsed properly"
  },
  "api/Joshf67.ServerConnector.Example.html": {
    "href": "api/Joshf67.ServerConnector.Example.html",
    "title": "Namespace Joshf67.ServerConnector.Example | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Example Classes ExampleDatabaseConnector Example connector to show how to connect to a databse and read/update values ExampleServerResponse Example response to show how to handle server responses InvetorySchema Allows easy parsing of a User's Inventory data through helper functions ItemSchema Allows easy parsing of a User's item data through helper functions UserSchema Allows easy parsing of a User's data through helper functions"
  },
  "api/Joshf67.ServerConnector.Example.InvetorySchema.html": {
    "href": "api/Joshf67.ServerConnector.Example.InvetorySchema.html",
    "title": "Class InvetorySchema | Server Connector documentation",
    "keywords": "Class InvetorySchema Allows easy parsing of a User's Inventory data through helper functions Inheritance Object InvetorySchema Namespace : Joshf67.ServerConnector.Example Assembly : cs.temp.dll.dll Syntax public static class InvetorySchema Methods GetCurrency(DataToken) Get the currency for a user Declaration public static double GetCurrency(DataToken data) Parameters Type Name Description DataToken data The user to get the currency for Returns Type Description Double The user's currency GetCurrency(DataToken, out Double) Get the currency for a user/inventory Declaration public static bool GetCurrency(DataToken data, out double currency) Parameters Type Name Description DataToken data The user/inventory to get the currency for Double currency The resulting user's currency Returns Type Description Boolean Boolean if the user's currency exists GetInventoryItems(DataToken) Get the items for a user/inventory Declaration public static DataList GetInventoryItems(DataToken data) Parameters Type Name Description DataToken data The user/inventory to get the inventory items for Returns Type Description DataList The user's inventory items GetInventoryItems(DataToken, out DataList) Get the items for a user/inventory Declaration public static bool GetInventoryItems(DataToken data, out DataList items) Parameters Type Name Description DataToken data The user/inventory to get the inventory items for DataList items The resulting user's inventory items Returns Type Description Boolean Boolean if the user's inventory items exists IsInventorySchema(DataToken, out DataDictionary) Test if a DataDictionary is actually an Inventory schema Declaration public static bool IsInventorySchema(DataToken data, out DataDictionary inventorySchema) Parameters Type Name Description DataToken data The DataDictionary to test DataDictionary inventorySchema The DataDictionary restult if this is a InventorySchema Returns Type Description Boolean Boolean if the DataDictionary is a Inventory schema"
  },
  "api/Joshf67.ServerConnector.Example.ItemSchema.html": {
    "href": "api/Joshf67.ServerConnector.Example.ItemSchema.html",
    "title": "Class ItemSchema | Server Connector documentation",
    "keywords": "Class ItemSchema Allows easy parsing of a User's item data through helper functions Inheritance Object ItemSchema Namespace : Joshf67.ServerConnector.Example Assembly : cs.temp.dll.dll Syntax public static class ItemSchema Methods GetItemID(DataToken) Get the ItemID for an item Declaration public static double GetItemID(DataToken data) Parameters Type Name Description DataToken data The item to get the ItemID for Returns Type Description Double The Item's ItemID GetItemID(DataToken, out Double) Get the ItemID for an item Declaration public static bool GetItemID(DataToken data, out double itemID) Parameters Type Name Description DataToken data The item to get the ItemID for Double itemID The resulting ItemID Returns Type Description Boolean Boolean if the ItemID exists IsItemSchema(DataToken, out DataDictionary) Test if a DataDictionary is actually a item schema Declaration public static bool IsItemSchema(DataToken data, out DataDictionary itemSchema) Parameters Type Name Description DataToken data The DataDictionary to test DataDictionary itemSchema The DataDictionary restult if this is a ItemSchema Returns Type Description Boolean Boolean if the DataDictionary is a item schema"
  },
  "api/Joshf67.ServerConnector.Example.UserSchema.html": {
    "href": "api/Joshf67.ServerConnector.Example.UserSchema.html",
    "title": "Class UserSchema | Server Connector documentation",
    "keywords": "Class UserSchema Allows easy parsing of a User's data through helper functions Inheritance Object UserSchema Namespace : Joshf67.ServerConnector.Example Assembly : cs.temp.dll.dll Syntax public static class UserSchema Methods GetInventory(DataToken) Get the inventory for a user Declaration public static DataDictionary GetInventory(DataToken data) Parameters Type Name Description DataToken data The user to get the inventory for Returns Type Description DataDictionary The user's inventory GetInventory(DataToken, out DataDictionary) Get the inventory for a user Declaration public static bool GetInventory(DataToken data, out DataDictionary inventory) Parameters Type Name Description DataToken data The user to get the inventory for DataDictionary inventory The resulting user's inventory Returns Type Description Boolean Boolean if the user inventory exists GetLoginHash(DataToken) Get the login hash for a user Declaration public static string GetLoginHash(DataToken data) Parameters Type Name Description DataToken data The user to get the hash for Returns Type Description String The user's login hash GetLoginHash(DataToken, out String) Test and Get the login hash for a user Declaration public static bool GetLoginHash(DataToken data, out string loginHash) Parameters Type Name Description DataToken data The user to get the hash for String loginHash The resulting user's login hash Returns Type Description Boolean Boolean if the user login hash exists IsUserSchema(DataToken, out DataDictionary) Test if a DataDictionary is actually a user schema Declaration public static bool IsUserSchema(DataToken data, out DataDictionary userSchema) Parameters Type Name Description DataToken data The DataDictionary to test DataDictionary userSchema The DataDictionary restult if this is a UserSchema Returns Type Description Boolean Boolean if the DataDictionary is a user schema"
  },
  "api/Joshf67.ServerConnector.html": {
    "href": "api/Joshf67.ServerConnector.html",
    "title": "Namespace Joshf67.ServerConnector | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector Classes Connector Abstract base class to enable easy connections to for servers Enums ConnectorMessageType Used so the server can understand what is supposed to happen for this response"
  },
  "api/Joshf67.ServerConnector.Packing.ByteConverter.html": {
    "href": "api/Joshf67.ServerConnector.Packing.ByteConverter.html",
    "title": "Class ByteConverter | Server Connector documentation",
    "keywords": "Class ByteConverter This class is a one-way converter to byte arrays, it doesn't not have a way to revert this This class is not optimized with generic objects so use DataTokens due to using typeof search which means we can't use switches because it's not const This is class is a combination of two different methods of converting to make generating server requests easier. https://github.com/Xytabich/UNet/blob/master/UNet/ByteBufferWriter.cs https://github.com/Miner28/NetworkedEventCaller Inheritance Object ByteConverter Namespace : Joshf67.ServerConnector.Packing Assembly : cs.temp.dll.dll Syntax public class ByteConverter Methods ConvertASCIIString(String) Convert a ASCII string to a DataList Byte Array Declaration public static DataList ConvertASCIIString(string value) Parameters Type Name Description String value The ASCII String to convert Returns Type Description DataList A DataList Byte Array with the same length as the string ConvertASCIIStrings(String[]) Convert ASCII strings to a DataList Array Declaration public static DataList ConvertASCIIStrings(string[] value) Parameters Type Name Description String [] value The ASCII strings to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertBool(Boolean) Convert a Boolean to a DataList Byte Array Declaration public static DataList ConvertBool(bool value) Parameters Type Name Description Boolean value The boolean to convert Returns Type Description DataList A single DataList Byte Array ConvertBools(Boolean[]) Convert Booleans to a DataList Array Declaration public static DataList ConvertBools(bool[] value) Parameters Type Name Description Boolean [] value The boolean to convert Returns Type Description DataList A DataList containing the individual converted results ConvertByte(Byte) Convert a Byte to a DataList Byte Array Declaration public static DataList ConvertByte(byte value) Parameters Type Name Description Byte value The boolean to convert Returns Type Description DataList A single DataList Byte Array ConvertBytes(Byte[]) Convert bytes to a DataList Byte Array Declaration public static DataList ConvertBytes(byte[] value) Parameters Type Name Description Byte [] value The byte array to convert Returns Type Description DataList A DataList Byte Array ConvertChar(Char) Convert a Char to a DataList Byte Array Declaration public static DataList ConvertChar(char value) Parameters Type Name Description Char value The char to convert Returns Type Description DataList A 2 DataList Byte Array ConvertChars(Char[]) Convert Chars to a DataList Array Declaration public static DataList ConvertChars(char[] value) Parameters Type Name Description Char [] value The chars to convert Returns Type Description DataList A DataList containing the individual converted results ConvertColor(Color) Convert a Color to a DataList Byte Array Declaration public static DataList ConvertColor(Color value) Parameters Type Name Description Color value The Color to convert Returns Type Description DataList A 4 DataList Byte Array ConvertColor32(Color32) Convert a Color32 to a DataList Byte Array Declaration public static DataList ConvertColor32(Color32 value) Parameters Type Name Description Color32 value The Color32 to convert Returns Type Description DataList A 4 DataList Byte Array ConvertColor32s(Color32[]) Convert Color32s to a DataList Byte Array Declaration public static DataList ConvertColor32s(Color32[] value) Parameters Type Name Description Color32 [] value The Color32s to convert Returns Type Description DataList A DataList Byte Array ConvertColors(Color[]) Convert Colors to a DataList Byte Array Declaration public static DataList ConvertColors(Color[] value) Parameters Type Name Description Color [] value The Colors to convert Returns Type Description DataList A DataList Byte Array ConvertDataDictionary(DataDictionary) Convert a DataDictionary to a DataList Byte Array Declaration public static DataList ConvertDataDictionary(DataDictionary value) Parameters Type Name Description DataDictionary value The DataDictionary to convert Returns Type Description DataList A single DataList Byte Array ConvertDataList(DataList) Convert a DataList to a DataList Byte Array Declaration public static DataList ConvertDataList(DataList value) Parameters Type Name Description DataList value The DataList to convert Returns Type Description DataList A single DataList Byte Array ConvertDataToken(DataToken) Convert any DataToken type into their byte array equivilent Declaration public static DataList ConvertDataToken(DataToken value) Parameters Type Name Description DataToken value The value to convert Returns Type Description DataList A DataList Byte Array ConvertDateTime(DateTime) Convert a DateTime to a DataList Byte Array Declaration public static DataList ConvertDateTime(DateTime value) Parameters Type Name Description DateTime value The DateTime to convert Returns Type Description DataList A 8 DataList Byte Array ConvertDateTimes(DateTime[]) Convert DateTimes to a DataList Array Declaration public static DataList ConvertDateTimes(DateTime[] value) Parameters Type Name Description DateTime [] value The DateTimes to convert Returns Type Description DataList A DataList containing the individual converted results ConvertDecimal(Decimal) Convert a Decimal floating-point to a DataList Byte Array Declaration public static DataList ConvertDecimal(Decimal value) Parameters Type Name Description Decimal value The Decimal floating-point to convert Returns Type Description DataList A 16 DataList Byte Array ConvertDecimals(Decimal[]) Convert Decimals to a DataList Array Declaration public static DataList ConvertDecimals(Decimal[] value) Parameters Type Name Description Decimal [] value The Decimals to convert Returns Type Description DataList A DataList containing the individual converted results ConvertGUID(Guid) Convert a Guid to a DataList Byte Array Declaration public static DataList ConvertGUID(Guid value) Parameters Type Name Description Guid value The Guid to convert Returns Type Description DataList A 16 DataList Byte Array ConvertGUIDs(Guid[]) Convert Guids to a DataList Array Declaration public static DataList ConvertGUIDs(Guid[] value) Parameters Type Name Description Guid [] value The Guids to convert Returns Type Description DataList A DataList containing the individual converted results ConvertHalf(Single) Convert a half-precision floating-point to a DataList Byte Array Declaration public static DataList ConvertHalf(float value) Parameters Type Name Description Single value The half-precision floating-point to convert Returns Type Description DataList A 2 DataList Byte Array ConvertHalf(Single[]) Convert half floats to a DataList Array Declaration public static DataList ConvertHalf(float[] value) Parameters Type Name Description Single [] value The half floats to convert Returns Type Description DataList A DataList containing the individual converted results ConvertHalfQuaternion(Quaternion) Convert a half Quaternion to a DataList Byte Array Declaration public static DataList ConvertHalfQuaternion(Quaternion value) Parameters Type Name Description Quaternion value The Vector4 to convert Returns Type Description DataList A 8 DataList Byte Array ConvertHalfQuaternion(Quaternion[]) Convert half Quaternions to a DataList Array Declaration public static DataList ConvertHalfQuaternion(Quaternion[] value) Parameters Type Name Description Quaternion [] value The half Quaternions to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertHalfVector2(Vector2) Convert a half Vector2 to a DataList Byte Array Declaration public static DataList ConvertHalfVector2(Vector2 value) Parameters Type Name Description Vector2 value The Vector2 to convert Returns Type Description DataList A 2 DataList Byte Array ConvertHalfVector2s(Vector2[]) Convert half Vector2s to a DataList Array Declaration public static DataList ConvertHalfVector2s(Vector2[] value) Parameters Type Name Description Vector2 [] value The half Vector2s to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertHalfVector3(Vector3) Convert a half Vector3 to a DataList Byte Array Declaration public static DataList ConvertHalfVector3(Vector3 value) Parameters Type Name Description Vector3 value The Vector3 to convert Returns Type Description DataList A 6 DataList Byte Array ConvertHalfVector3(Vector3[]) Convert half Vector3s to a DataList Array Declaration public static DataList ConvertHalfVector3(Vector3[] value) Parameters Type Name Description Vector3 [] value The half Vector3s to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertHalfVector4(Vector4) Convert a half Vector4 to a DataList Byte Array Declaration public static DataList ConvertHalfVector4(Vector4 value) Parameters Type Name Description Vector4 value The Vector4 to convert Returns Type Description DataList A 8 DataList Byte Array ConvertHalfVector4(Vector4[]) Convert half Vector4s to a DataList Array Declaration public static DataList ConvertHalfVector4(Vector4[] value) Parameters Type Name Description Vector4 [] value The half Vector4s to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertInt16(Int16) Convert a Int16 to a DataList Byte Array Declaration public static DataList ConvertInt16(Int16 value) Parameters Type Name Description Int16 value The Int16 to convert Returns Type Description DataList A 2 DataList Byte Array ConvertInt16s(Int16[]) Convert Int16s to a DataList Array Declaration public static DataList ConvertInt16s(Int16[] value) Parameters Type Name Description Int16 [] value The Int16s to convert Returns Type Description DataList A DataList containing the individual converted results ConvertInt32(Int32) Convert an Integer to a DataList Byte Array Declaration public static DataList ConvertInt32(int value) Parameters Type Name Description Int32 value The Integer to convert Returns Type Description DataList A 4 DataList Byte Array ConvertInt32s(Int32[]) Convert ints to a DataList Array Declaration public static DataList ConvertInt32s(int[] value) Parameters Type Name Description Int32 [] value The ints to convert Returns Type Description DataList A DataList containing the individual converted results ConvertInt64(Int64) Convert a 64-bit Integer to a DataList Byte Array Declaration public static DataList ConvertInt64(Int64 value) Parameters Type Name Description Int64 value The Integer to convert Returns Type Description DataList A 8 DataList Byte Array ConvertInt64s(Int64[]) Convert Int64s to a DataList Array Declaration public static DataList ConvertInt64s(Int64[] value) Parameters Type Name Description Int64 [] value The Int64s to convert Returns Type Description DataList A DataList containing the individual converted results ConvertObject(Object) convert any standard/unity type excluding UTF based on typeof into a DataList of bytes Declaration public static DataList ConvertObject(object value) Parameters Type Name Description Object value The value to convert Returns Type Description DataList A DataList Byte Array ConvertQuaternion(Quaternion) Convert a Quaternion to a DataList Byte Array Declaration public static DataList ConvertQuaternion(Quaternion value) Parameters Type Name Description Quaternion value The Vector4 to convert Returns Type Description DataList A 16 DataList Byte Array ConvertQuaternions(Quaternion[]) Convert Quaternions to a DataList Array Declaration public static DataList ConvertQuaternions(Quaternion[] value) Parameters Type Name Description Quaternion [] value The Quaternions to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertSByte(SByte) Convert a SByte to a DataList Byte Array Declaration public static DataList ConvertSByte(sbyte value) Parameters Type Name Description SByte value The SByte to convert Returns Type Description DataList A single DataList Byte Array ConvertSBytes(SByte[]) Convert SBytes to a DataList Array Declaration public static DataList ConvertSBytes(sbyte[] value) Parameters Type Name Description SByte [] value The SBytes to convert Returns Type Description DataList A DataList containing the individual converted results ConvertSingle(Single) Convert a single-precision floating-point into a DataList Byte Array Declaration public static DataList ConvertSingle(float value) Parameters Type Name Description Single value The single-precision floating-point to convert Returns Type Description DataList A 4 DataList Byte Array ConvertSingles(Single[]) Convert floats to a DataList Array Declaration public static DataList ConvertSingles(float[] value) Parameters Type Name Description Single [] value The floats to convert Returns Type Description DataList A DataList containing the individual converted results ConvertTimeSpan(TimeSpan) Convert a TimeSpan to a DataList Byte Array Declaration public static DataList ConvertTimeSpan(TimeSpan value) Parameters Type Name Description TimeSpan value The TimeSpan to convert Returns Type Description DataList A 8 DataList Byte Array ConvertTimeSpans(TimeSpan[]) Convert TimeSpans to a DataList Array Declaration public static DataList ConvertTimeSpans(TimeSpan[] value) Parameters Type Name Description TimeSpan [] value The TimeSpans to convert Returns Type Description DataList A DataList containing the individual converted results ConvertUInt16(UInt16) Convert a UInt16 to a DataList Byte Array Declaration public static DataList ConvertUInt16(UInt16 value) Parameters Type Name Description UInt16 value The UInt16 to convert Returns Type Description DataList A 2 DataList Byte Array ConvertUInt16s(UInt16[]) Convert UInt16s to a DataList Array Declaration public static DataList ConvertUInt16s(UInt16[] value) Parameters Type Name Description UInt16 [] value The UInt16s to convert Returns Type Description DataList A DataList containing the individual converted results ConvertUInt32(UInt32) Convert an Unsigned Integer to a DataList Byte Array Declaration public static DataList ConvertUInt32(uint value) Parameters Type Name Description UInt32 value The Unsigned Integer to convert Returns Type Description DataList A 4 DataList Byte Array ConvertUInt32s(UInt32[]) Convert uints to a DataList Array Declaration public static DataList ConvertUInt32s(uint[] value) Parameters Type Name Description UInt32 [] value The uints to convert Returns Type Description DataList A DataList containing the individual converted results ConvertUInt64(UInt64) Convert a 64-bit Unsigned Integer to a DataList Byte Array Declaration public static DataList ConvertUInt64(UInt64 value) Parameters Type Name Description UInt64 value The Unsigned Integer to convert Returns Type Description DataList A 8 DataList Byte Array ConvertUInt64s(UInt64[]) Convert UInt64 to a DataList Array Declaration public static DataList ConvertUInt64s(UInt64[] value) Parameters Type Name Description UInt64 [] value The UInt64 to convert Returns Type Description DataList A DataList containing the individual converted results ConvertUTF8String(String) Convert a UTF8 string to a DataList Byte Array Declaration public static DataList ConvertUTF8String(string value) Parameters Type Name Description String value The UTF8 String to convert Returns Type Description DataList A DataList Byte Array with the same length as the string or compressed length + 1 ConvertUTF8String(String[]) Convert UTF8 strings to a DataList Array Declaration public static DataList ConvertUTF8String(string[] value) Parameters Type Name Description String [] value The UTF8 strings to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertVector2(Vector2) Convert a Vector2 to a DataList Byte Array Declaration public static DataList ConvertVector2(Vector2 value) Parameters Type Name Description Vector2 value The Vector2 to convert Returns Type Description DataList A 8 DataList Byte Array ConvertVector2s(Vector2[]) Convert Vector2s to a DataList Array Declaration public static DataList ConvertVector2s(Vector2[] value) Parameters Type Name Description Vector2 [] value The Vector2s to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertVector3(Vector3) Convert a Vector3 to a DataList Byte Array Declaration public static DataList ConvertVector3(Vector3 value) Parameters Type Name Description Vector3 value The Vector3 to convert Returns Type Description DataList A 12 DataList Byte Array ConvertVector3s(Vector3[]) Convert Vector3s to a DataList Array Declaration public static DataList ConvertVector3s(Vector3[] value) Parameters Type Name Description Vector3 [] value The Vector3s to convert Returns Type Description DataList A single DataList containing the individual converted results ConvertVector4(Vector4) Convert a Vector4 to a DataList Byte Array Declaration public static DataList ConvertVector4(Vector4 value) Parameters Type Name Description Vector4 value The Vector4 to convert Returns Type Description DataList A 16 DataList Byte Array ConvertVector4s(Vector4[]) Convert Vector4s to a DataList Array Declaration public static DataList ConvertVector4s(Vector4[] value) Parameters Type Name Description Vector4 [] value The Vector4s to convert Returns Type Description DataList A single DataList containing the individual converted results GetPackingType(DataToken) Returns the byte PackingType for a given type Declaration public static PackingType GetPackingType(DataToken value) Parameters Type Name Description DataToken value The data to get the PackingType for Returns Type Description PackingType GetPackingType(Object) Returns the byte PackingType for a given type Declaration public static PackingType GetPackingType(object value) Parameters Type Name Description Object value The data to get the PackingType for Returns Type Description PackingType ReturnDataTokenValueAsObject(DataToken) Returns the value for a DataToken regardless of type as an object Declaration public static object ReturnDataTokenValueAsObject(DataToken value) Parameters Type Name Description DataToken value The DataToken to get the value for Returns Type Description Object object storing the DataToken value"
  },
  "api/Joshf67.ServerConnector.Packing.html": {
    "href": "api/Joshf67.ServerConnector.Packing.html",
    "title": "Namespace Joshf67.ServerConnector.Packing | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Packing Classes ByteConverter This class is a one-way converter to byte arrays, it doesn't not have a way to revert this This class is not optimized with generic objects so use DataTokens due to using typeof search which means we can't use switches because it's not const This is class is a combination of two different methods of converting to make generating server requests easier. https://github.com/Xytabich/UNet/blob/master/UNet/ByteBufferWriter.cs https://github.com/Miner28/NetworkedEventCaller MessagePacker Static helper class that handles packing any messages together to compress the required bits of data Enums PackingType Used to determine what type of packing a DataStructure uses"
  },
  "api/Joshf67.ServerConnector.Packing.MessagePacker.html": {
    "href": "api/Joshf67.ServerConnector.Packing.MessagePacker.html",
    "title": "Class MessagePacker | Server Connector documentation",
    "keywords": "Class MessagePacker Static helper class that handles packing any messages together to compress the required bits of data Inheritance Object MessagePacker Namespace : Joshf67.ServerConnector.Packing Assembly : cs.temp.dll.dll Syntax public static class MessagePacker Methods CompressMessage(DataList, Int32, Int32) Compress any built-in/unity types into a standard structure Declaration public static DataDictionary CompressMessage(DataList message, int bitsToUse = -1, int packingType = 0) Parameters Type Name Description DataList message The message to compress Int32 bitsToUse The bits required from this message, will be calculated if not provided Int32 packingType Determines the method used for packing bits Returns Type Description DataDictionary An DataDictionary containing 4 keys: original_message == The original message, bits_to_use == The bits required for the compress message, message_bytes == The DataList of the bytes of the compressed message packing_type == The PackingType of the compressed message CompressMessage(DataToken, Int32, Int32) Compress any DataToken types into a standard structure Declaration public static DataDictionary CompressMessage(DataToken message, int bitsToUse = -1, int packingType = 0) Parameters Type Name Description DataToken message The DataToken to compress Int32 bitsToUse The bits required from this message, will be calculated if not provided Int32 packingType Determines the method used for packing bits Returns Type Description DataDictionary An DataDictionary containing 4 keys: original_message == The original message, bits_to_use == The bits required for the compress message, message_bytes == The DataList of the bytes of the compressed message packing_type == The PackingType of the compressed message CompressMessage(Object, Int32, Int32) Compress any built-in/unity types into a standard structure Declaration public static DataDictionary CompressMessage(object message, int bitsToUse = -1, int packingType = 0) Parameters Type Name Description Object message The message to compress Int32 bitsToUse The bits required from this message, will be calculated if not provided Int32 packingType Determines the method used for packing bits Returns Type Description DataDictionary An DataDictionary containing 4 keys: original_message == The original message, bits_to_use == The bits required for the compress message, message_bytes == The DataList of the bytes of the compressed message packing_type == The PackingType of the compressed message IsCompressedMessage(DataDictionary, Boolean) Compares if a DataList parameter is in the format of a compressed message Declaration public static bool IsCompressedMessage(DataDictionary message, bool logAsWarning = false) Parameters Type Name Description DataDictionary message The message to check Boolean logAsWarning Determines if the message requires warning mode and will be logged as such Returns Type Description Boolean Boolean determining the structure type IsCompressedMessage(Object, Boolean) Compares if an object parameter is in the format of a compressed message Declaration public static bool IsCompressedMessage(object message, bool logAsWarning = false) Parameters Type Name Description Object message The message to check Boolean logAsWarning Determines if the message requires warning mode and will be logged as such Returns Type Description Boolean Boolean determining the structure type PackMessageBytesToURL(DataList, ConnectorMessageType, Byte, Byte) Pack message bytes into a useable url Declaration public static DataList PackMessageBytesToURL(DataList messages, ConnectorMessageType messageType, byte packedMessageBitSize, byte messageTypeSize) Parameters Type Name Description DataList messages The messages to pack ConnectorMessageType messageType The type of message that is being sent Byte packedMessageBitSize The total size of a packed chunk/message Byte messageTypeSize The total bits count to be used for the message type Returns Type Description DataList A DataList containing all the packed/converted URLs PackMessageBytesToURL(DataToken, ConnectorMessageType, Byte, Byte) Pack a single DataToken message into a useable url Declaration public static DataList PackMessageBytesToURL(DataToken message, ConnectorMessageType messageType, byte packedMessageBitSize, byte messageTypeSize) Parameters Type Name Description DataToken message The DataToken to pack ConnectorMessageType messageType The type of message that is being sent Byte packedMessageBitSize The total size of a packed chunk/message Byte messageTypeSize The total bits count to be used for the message type Returns Type Description DataList A DataList containing all the packed/converted URLs PackMessageBytesToURL(Object, ConnectorMessageType, Byte, Byte) Tries to pack an object message into a useable url Declaration public static DataList PackMessageBytesToURL(object message, ConnectorMessageType messageType, byte packedMessageBitSize, byte messageTypeSize) Parameters Type Name Description Object message The object to pack ConnectorMessageType messageType The type of message that is being sent Byte packedMessageBitSize The total size of a packed chunk/message Byte messageTypeSize The total bits count to be used for the message type Returns Type Description DataList A DataList containing all the packed/converted URLs"
  },
  "api/Joshf67.ServerConnector.Packing.PackingType.html": {
    "href": "api/Joshf67.ServerConnector.Packing.PackingType.html",
    "title": "Enum PackingType | Server Connector documentation",
    "keywords": "Enum PackingType Used to determine what type of packing a DataStructure uses Namespace : Joshf67.ServerConnector.Packing Assembly : cs.temp.dll.dll Syntax public enum PackingType Fields Name Description BigEndian Indicates that the data uses Big Endian for its DataStructure LittleEndian Indicates that the data uses Little Endian for its DataStructure None Used in functions where the PackingType should be inferred from the type Sequential Indicates that the Endian of this DataStructure, doesn't matter and should be treated as sequential when packing"
  },
  "api/Joshf67.ServerConnector.Server.html": {
    "href": "api/Joshf67.ServerConnector.Server.html",
    "title": "Namespace Joshf67.ServerConnector.Server | Server Connector documentation",
    "keywords": "Namespace Joshf67.ServerConnector.Server Classes ServerResponse Base abstract class to allow generic server response reading Enums ServerResponseType Used to determine the response type from a server"
  },
  "api/Joshf67.ServerConnector.Server.ServerResponse.html": {
    "href": "api/Joshf67.ServerConnector.Server.ServerResponse.html",
    "title": "Class ServerResponse | Server Connector documentation",
    "keywords": "Class ServerResponse Base abstract class to allow generic server response reading Inheritance Object ServerResponse Namespace : Joshf67.ServerConnector.Server Assembly : cs.temp.dll.dll Syntax public abstract class ServerResponse : UdonSharpBehaviour Properties Content Public getter for the content of the response Declaration public DataToken Content { get; } Property Value Type Description DataToken Response Public getter for the full message recieved from a server Declaration public DataToken Response { get; } Property Value Type Description DataToken Type Public getter for the type of response Declaration public ServerResponseType Type { get; } Property Value Type Description ServerResponseType Methods GetMessageContent(DataDictionary) Parses a JSON DataDictionary and finds the Response content Declaration public static DataToken GetMessageContent(DataDictionary response) Parameters Type Name Description DataDictionary response The JSON DataDictionary to parse Returns Type Description DataToken The content of a response or an error if invalid GetMessageContent(String) Parses a JSON String and finds the Response content Declaration public static DataToken GetMessageContent(string response) Parameters Type Name Description String response The JSON String to parse Returns Type Description DataToken The content of a response or an error if invalid GetMessageType(DataDictionary) Parses a JSON DataDictionary and finds the Response type Declaration public static ServerResponseType GetMessageType(DataDictionary response) Parameters Type Name Description DataDictionary response The JSON DataDictionary to parse Returns Type Description ServerResponseType The response type of the message GetMessageType(String) Parses a JSON String and finds the Response type Declaration public static ServerResponseType GetMessageType(string response) Parameters Type Name Description String response The JSON String to parse Returns Type Description ServerResponseType The response type of the message HandleResponse(DataDictionary, out DataToken) Handles the parsed message Declaration protected abstract bool HandleResponse(DataDictionary response, out DataToken HandleResult) Parameters Type Name Description DataDictionary response The JSON DataDictionary to be handled DataToken HandleResult The result of the ServerRespons handler Returns Type Description Boolean Boolean if the response was parsed properly LogServerResponse(DataToken) Logs a server response and all of it's variables Declaration protected static void LogServerResponse(DataToken response) Parameters Type Name Description DataToken response The response to parse Parse(String, out DataToken) Parses a JSON String and handle the message Declaration public bool Parse(string message, out DataToken HandleResult) Parameters Type Name Description String message The JSON String to parse DataToken HandleResult The result of the ServerRespons handler Returns Type Description Boolean Boolean if the response was handled or not ParseWithoutHandling(String) Parses a JSON String and does not try to handle it, useful for saving logic for later Declaration public bool ParseWithoutHandling(string message) Parameters Type Name Description String message The JSON String to parse Returns Type Description Boolean Boolean if the response was handled or not ParseWithoutResult(String) Parses a JSON String and handle the response but ignore the result Declaration public bool ParseWithoutResult(string message) Parameters Type Name Description String message The JSON String to parse Returns Type Description Boolean Boolean if the response was handled or not"
  },
  "api/Joshf67.ServerConnector.Server.ServerResponseType.html": {
    "href": "api/Joshf67.ServerConnector.Server.ServerResponseType.html",
    "title": "Enum ServerResponseType | Server Connector documentation",
    "keywords": "Enum ServerResponseType Used to determine the response type from a server Namespace : Joshf67.ServerConnector.Server Assembly : cs.temp.dll.dll Syntax public enum ServerResponseType Fields Name Description Account_Creation_Complete The server was able to create a user for the built login hash Added_Item The server has updated a user's inventory items to add the new items Failed The server failed to recieve and handle the message for some reason Failed_To_Parse The server was unable to parse the message Item_Updated The server has recieved an update to the item related message Login_Complete The server managed to find a user for the built login hash Login_Failed The server failed to find a user for the built login hash Login_Updated The login hash was updated None The server did not respond with a type Removed_Item The server has updated a user's inventory items to remove the requested items Server_Error The server encountered an error with the request Succeeded The server succeeded in recieving and handling the message Type_Fail The server was expecting a message with a different type Unexpected_Request The server was not expecting a response User_Not_Logged_In The user is not currently logged in when making a request"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Server Connector documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Server Connector documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}